
rule bamtobed:
    input:
        "{path}.bam.sorted"
    output:
        "{path}.bed"
    conda:
        "../../envs/global.yaml"
    shell: "bamToBed -i {input[0]} > {output[0]}"


rule bamtobed_pe:
    input:
        "{path}.bam.sorted"
    output:
        "{path}.bedpe"
    conda:
        "../../envs/global.yaml"
    shell: "bamToBed -bedpe -i {input[0]} > {output[0]}"


rule bedtobam:
    input:
        bed = lambda w: ss.loc[ss.Name == w.sample].File,
        chromsizes = "{{prefix}}/data/download/chromsizes/{genome}.chromsizes".format(genome=config["genome"])
    output:
        "{prefix}/data/bam/{sample}.bam"
    conda:
        "../../envs/global.yaml"
    shell:
        "bedToBam -i {input.bed} -g {input.chromsizes} > {output[0]}"
