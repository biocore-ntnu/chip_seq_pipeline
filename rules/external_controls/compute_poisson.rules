
# rule compute_poisson:
#     input:
#         "{prefix}/data/epic/{group}.matrix.gz"
#     output:
#         "{prefix}/data/external_controls/{group}.poisson"
# s = pd.read_table(input.infile, sep=" ", squeeze=True, index_col=0, header=None)
# s.name = "_".join([wildcards.sample, wildcards.modification])

# effective_genome_size = 3.2e9 * 0.8
# bins = int(effective_genome_size/int(wildcards.bin_size))

# unique_alignments = s.sum()

# average = int(unique_alignments)/bins

# value_counts = s.value_counts().fillna(0)
# poisson_scores = pd.Series(poisson.sf(value_counts, mu=average))

# poisson_p_vals = s.replace(poisson_scores)

# fdr = multipletests(poisson_p_vals, method="fdr_bh")[1]
# fdr = pd.Series(fdr, index=s.index, name=s.name + "_fdr")

# df = pd.concat([s, fdr], axis=1)

# df[df.ix[:,1] > 0.05].to_csv(output.outfile, sep=" ", header=None)
