
if config.get("annotation_gff3"):

    rule parse_gencode:
        input:
            "{prefix}/data/annotation/gencode.unparsed_bed"
        output:
            "{prefix}/data/annotation/annotation.bed"
        run:
            rowdicts = []
            for line in open(input[0]):
                split_line = line.split()

                chromosome, start, end, name = split_line[:4]
                strand = split_line[5]
                gene_type = split_line[7]

                if gene_type == "exon":
                    transcript, exon_number = name.split(":")[1:3]
                elif gene_type == "transcript":
                    transcript, exon_number = name, -1
                else:
                    continue

                gene_id = split_line[9].split("gene_id=")[1].split(";")[0]

                rowdict = {"Chromosome": chromosome, "Start": start, "End": end, "Name": gene_id,  "Type": "gene", "Strand": strand, "Transcript": transcript, "ExonNumber": exon_number}

                rowdicts.append(rowdict)

            df = pd.DataFrame.from_dict(rowdicts)
            df = df["Chromosome Start End Name Type Strand Transcript ExonNumber".split()]

            df.to_csv(output[0], sep="\t", index=False)

else:
    rule parse_ucsc:
        input:
            "{prefix}/data/annotation/ucsc.unparsed"
        output:
            "{prefix}/data/annotation/annotation.bed"
        run:
            rowdicts = []
            for line in open(input[0]):
                chromosome, gene_start, gene_end, exon_starts, exon_ends, name, name2, strand = line.split()

                rowdict = {"Chromosome": chromosome, "Start": gene_start, "End": gene_end, "Name": name2,  "Type": "gene", "Strand": strand, "Transcript": name, "ExonNumber": -1}
                rowdicts.append(rowdict)

                # parse exons
                exon_starts, exon_ends = re.sub(",$", "", exon_starts), re.sub(",$", "", exon_ends)
                starts, ends = exon_starts.split(","), exon_ends.split(",")

                assert len(starts) == len(ends), "Unequal number of exon starts and ends in line: " + line

                for i, (start, end) in enumerate(zip(starts, ends), 1):
                    rowdict = {"Chromosome": chromosome, "Start": start, "End": end, "Name": name2,  "Type": "exon", "Strand": strand, "Transcript": name, "ExonNumber": i}
                    rowdicts.append(rowdict)

                    df = pd.DataFrame.from_dict(rowdicts)
                    df = df["Chromosome Start End Name Type Strand Transcript ExonNumber".split()]

                    df.to_csv(output[0], sep="\t", index=False)
