rule voom:
    input:
        counts = "{prefix}/data/epic_cluster/{caller}_cluster_no_input.csv.gz",
        # design = config["design_matrix"]
    output:
        e_values = "{prefix}/data/voom/{caller}.e_values",
        weights = "{prefix}/data/voom/{caller}.weights",
        plot = "{prefix}/logs/voom/loo/{caller}.pdf"
    params:
        voom_normalization_dge = config.get("voom_normalization_dge", "TMM")
    script:
        "../../scripts/voom.R"


rule voom_loo:
    input:
        counts = "{prefix}/data/epic_cluster/loo/{group}_{caller}_cluster_no_input.csv.gz",
        # design = config["design_matrix"]
    output:
        e_values = "{prefix}/data/voom/loo/{group}_{caller}.e_values",
        weights = "{prefix}/data/voom/loo/{group}_{caller}.weights",
        plot = "{prefix}/logs/voom/loo/{group}_{caller}.pdf"
    params:
        voom_normalization_dge = config.get("voom_normalization_dge", "TMM")
        # voom_normalization_dge = config["voom_normalization_dge"]
    script:
        "../../scripts/voom.R"
