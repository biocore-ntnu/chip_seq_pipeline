sort_cmd = "samtools sort -@ {threads} {input[0]} > {output[0]}"
index_cmd = "samtools index -@ {threads} {input[0]}"

if filetype not in ["bam", "bed"]:


    rule sort_bam:
        input:
            "{path}.bam"
        output:
            "{path}.sorted.bam"
        conda:
            "../../envs/global.yaml"
        threads:
            8
        shell:
            sort_cmd


    rule index_bam:
        input:
            "{path}.sorted.bam"
        output:
            "{path}.sorted.bam.bai"
        conda:
            "../../envs/global.yaml"
        threads:
            8
        shell:
            index_cmd


else:


    def bams(w):
        ss = sample_sheet
        return ss.loc[ss.Name == w.sample].File.iloc[0]

    rule sort_bam:
        input:
            bams
        output:
            "{prefix}/data/bam/{sample}.sorted.bam"
        conda:
            "../../envs/global.yaml"
        threads:
            8
        shell:
            sort_cmd


    rule index_bam:
        input:
            "{prefix}/data/bam/{sample}.sorted.bam"
        output:
            "{prefix}/data/bam/{sample}.sorted.bam.bai"
        conda:
            "../../envs/global.yaml"
        threads:
            8
        shell:
            index_cmd


    rule sort_group_bams:
        input:
            "{prefix}/data/bamcompare/{group}_{chip}.bam"
        output:
            "{prefix}/data/bamcompare/{group}_{chip}.sorted.bam"
        threads:
            8
        shell:
            sort_cmd


    rule index_group_bam:
        input:
            "{prefix}/data/bamcompare/{group}_{chip}.sorted.bam"
        output:
            "{prefix}/data/bamcompare/{group}_{chip}.sorted.bam.bai"
        conda:
            "../../envs/global.yaml"
        threads:
            8
        shell:
            index_cmd
