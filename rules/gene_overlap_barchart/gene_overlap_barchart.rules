from natsort import natsorted

rule add_tss:
    input:
        "{prefix}/data/annotation/no_duplicate_tss.bed"
    output:
        "{prefix}/data/gene_barcharts/merged_with_tss.bed"
    script:
        "../../scripts/add_tss.py"


rule create_intervaltrees:
    input:
        "{prefix}/data/gene_barcharts/merged_with_tss.bed"
    output:
        "{prefix}/data/gene_barcharts/intervals.pickle"
    conda:
        "../../envs/intervaltrees.yaml"
    script:
        "../../scripts/create_intervaltrees.py"


rule gene_overlap_barcharts_data:
    input:
        intervals = "{prefix}/data/gene_barcharts/intervals.pickle",
        peaks = "{prefix}/data/peaks/{caller}/{group}.csv"
    output:
        "{prefix}/data/gene_barcharts/{caller}/{group}.csv"
    params:
        label = lambda w: w.group
    script:
        "../../scripts/find_peak_gene_overlaps.py"


rule collect_gene_overlap_data:
    input:
        expand("{{prefix}}/data/gene_barcharts/{{cs_caller}}/{group}.csv", group=natsorted(ss.Group.drop_duplicates()))
    output:
        "{prefix}/data/gene_barcharts/{cs_caller}/merged_group.csv"
    run:
        dfs = [pd.read_table(f, sep=" ", header=0, index_col=None) for f in input]
        df = pd.concat(dfs)
        df.to_csv(output[0], sep=" ")


rule graph_gene_overlap_barcharts:
    input:
        "{prefix}/data/gene_barcharts/{cs_caller}/merged_group.csv"
    output:
        "{prefix}/data/gene_barcharts/{cs_caller}_gene_overlap_barchart.pdf"
    conda:
        "../../envs/gene_overlap_barcharts.yaml"
    script:
        "../../scripts/barchart.R"
